# Server configuration
server.port=8080
server.servlet.context-path=/imovel
# Application properties
appli.name=Imovel API
app.version=1.0.0

# PostgreSQL Database Configuration
#spring.datasource.url=jdbc:postgresql://localhost:5432/imovel_db
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.datasource.driver-class-name=org.postgresql.Driver

# AWS RDS PostgreSQL connection propertie
spring.datasource.url=jdbc:postgresql://${RDS_HOSTNAME}:${RDS_PORT}/${RDS_DB_NAME}?ssl=true&sslmode=require
spring.datasource.username=${RDS_USERNAME}
spring.datasource.password=${RDS_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate/JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Connection pool settings
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=2000000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.auto-commit=true
spring.jpa.properties.hibernate.ejb.use_class_enhancer=true

# AWS Configuration
aws.access-key=${AWS_ACCESS_KEY}
aws.secret-key=${AWS_SECRET_KEY}
aws.s3.region=${AWS_S3_REGION}
aws.s3.bucket-name=${AWS_S3_BUCKET_NAME}

# Local File Storage Configuration
storage.local.path=/var/www/property-media/uploads
storage.local.url=http://localhost:8080/media

# Storage Provider Selection (S3, DATABASE, LOCAL)
storage.type.provider=S3

# File Upload Settings
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Rate Limiting Configuration
resilience4j.ratelimiter.instances.paymentProcessing.limit-for-period=10
resilience4j.ratelimiter.instances.paymentProcessing.limit-refresh-period=60s
resilience4j.ratelimiter.instances.paymentProcessing.timeout-duration=5s

resilience4j.ratelimiter.instances.paymentVerification.limit-for-period=20
resilience4j.ratelimiter.instances.paymentVerification.limit-refresh-period=60s
resilience4j.ratelimiter.instances.paymentVerification.timeout-duration=3s

resilience4j.ratelimiter.instances.paymentRefund.limit-for-period=5
resilience4j.ratelimiter.instances.paymentRefund.limit-refresh-period=60s
resilience4j.ratelimiter.instances.paymentRefund.timeout-duration=10s

resilience4j.ratelimiter.instances.webhook.limit-for-period=100
resilience4j.ratelimiter.instances.webhook.limit-refresh-period=60s
resilience4j.ratelimiter.instances.webhook.timeout-duration=1s

springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
#http://localhost:8080/imovel/swagger-ui/index.html

# SMTP server settings
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.protocol=smtp

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Monitoring and Metrics Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# Health check configuration
management.health.db.enabled=true
management.health.diskspace.enabled=true


#http://ip:9090/query

# Metrics configuration
management.metrics.tags.application=imovel-api
management.metrics.tags.environment=${ENVIRONMENT:development}
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99

# Payment Monitoring Alerts Configuration
payment.monitoring.alerts.enabled=true
payment.monitoring.alerts.email.enabled=true
payment.monitoring.alerts.email.recipients=${MAIL_USERNAME}
payment.monitoring.alerts.email.from=${MAIL_USERNAME}
payment.monitoring.alerts.email.subject=Imovel Payment System
payment.monitoring.alerts.thresholds.failure-rate=0.1
payment.monitoring.alerts.thresholds.failure-count=5
payment.monitoring.alerts.thresholds.time-window=PT5M
payment.monitoring.alerts.cooldown.failure-alert=PT15M
payment.monitoring.alerts.cooldown.health-alert=PT30M
payment.monitoring.alerts.cooldown.webhook-alert=PT10M
payment.monitoring.alerts.cooldown.rate-limit-alert=PT5M

#currently using logger from spring

#logging.file.path=logs/
#logging.file.name=logs/application.log